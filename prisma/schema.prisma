// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Ticket {
  id           Int      @id @default(autoincrement())
  name         String
  status       String
  description  String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  fields       Field[]  @relation("TicketFields") // Many-to-many relation
  assigneeId   Int // ID of the user who created the ticket (assignee)
  assignedToId Int? // ID of the user assigned to solve the ticket (optional)

  @@map("tickets")
}

model Field {
  id        Int      @id @default(autoincrement())
  fieldName String   @unique
  type      String
  tickets   Ticket[] @relation("TicketFields") // Many-to-many relation

  @@unique([fieldName, type]) // Composite unique constraint
  @@map("fields")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String
  password  String
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  roleId    Int      @default(2) 
  role      Role     @relation(fields: [roleId], references: [id])

  @@map("users")
}

model Role {
  id               Int    @id @default(autoincrement())
  role_name        String @unique
  role_description String
  users            User[]

  @@map("roles")
}
